import { type NextPage } from "next";
import { useState } from "react";
import { signIn, signOut, useSession } from "next-auth/react";

// import { default as Layout } from '../components/Layout';
import { api } from "../utils/api";

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const { data: session, status } = useSession();

  if (status === "loading") {
    // TODO: create a loading component
    return <main className="flex flex-col items-center pt-4">Loading...</main>;
  }

  return (
    <main className="flex flex-col items-center">
      <h1 className="text-3xl pt-4">Guestbook</h1>
      <p>
        Tutorial for <code>create-t3-app</code>
      </p>
      <div>
        {session ? (
          <>
            <p className="mb-4 text-center">hi {session.user?.name}</p>
            <button
              type="button"
              className="mx-auto block rounded-md bg-neutral-800 py-3 px-6 text-center hover:bg-neutral-700"
              onClick={() => {
                signOut().catch(console.log);
              }}
            >
              Logout
            </button>
            <div className="pt-6">
              <Form />
            </div>
          </>
        ) : (
          <button
            type="button"
            className="mx-auto block rounded-md bg-neutral-800 py-3 px-6 text-center hover:bg-neutral-700"
            onClick={() => {
              signIn("discord").catch(console.log);
            }}
          >
            Login with Discord
          </button>
        )}
        <div className="mt-10">
          <h2>List of active Users</h2>
          <Users />
        </div>
      </div>
    </main>
    // <>
    //   <Head>
    //     <title>Create T3 App</title>
    //     <meta name="description" content="Generated by create-t3-app" />
    //     <link rel="icon" href="/favicon.ico" />
    //   </Head>
    //   <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
    //     <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
    //       <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
    //         Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
    //       </h1>
    //       <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
    //         Hello You Numpty
    //       </h1>
    //       <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
    //         <Link
    //           className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
    //           href="https://create.t3.gg/en/usage/first-steps"
    //           target="_blank"
    //         >
    //           <h3 className="text-2xl font-bold">First Steps →</h3>
    //           <div className="text-lg">
    //             Just the basics - Everything you need to know to set up your
    //             database and authentication.
    //           </div>
    //         </Link>
    //         <Link
    //           className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
    //           href="https://create.t3.gg/en/introduction"
    //           target="_blank"
    //         >
    //           <h3 className="text-2xl font-bold">Documentation →</h3>
    //           <div className="text-lg">
    //             Learn more about Create T3 App, the libraries it uses, and how
    //             to deploy it.
    //           </div>
    //         </Link>
    //       </div>
    //       <div className="flex flex-col items-center gap-2">
    //         <p className="text-2xl text-white">
    //           {hello.data ? hello.data.greeting : "Loading tRPC query..."}
    //         </p>
    //         <AuthShowcase />
    //       </div>
    //     </div>
    //   </main>
    // </>
  );
};

export default Home;

const Users = () => {
  const { data: guestbookEntries, isLoading } = api.users.getAll.useQuery();

  if (isLoading) return <div>Fetching Users...</div>;

  return (
    <div className="flex flex-col gap-2 mt-5">
      {guestbookEntries?.map((entry, index) => {
        return (
          <div key={index}>
            <p>{entry.name} - {entry.email} - {entry.id}</p>
          </div>
        );
      })}
    </div>
  );
};

const Form = () => {
  const [message, setMessage] = useState("");
  const { data: session, status } = useSession();

  const postMessage = api.guestbook.postMessage.useMutation();

  if (status !== "authenticated") return null;

  return (
    <form
      className="flex gap-2"
      onSubmit={(event) => {
        event.preventDefault();
        postMessage.mutate({
          name: session.user?.name as string,
          message,
        });
        setMessage("");
      }}
    >
      <input
        type="text"
        className="rounded-md border-2 border-zinc-800 bg-neutral-900 px-4 py-2 focus:outline-none"
        placeholder="Your message..."
        minLength={2}
        maxLength={100}
        value={message}
        onChange={(event) => setMessage(event.target.value)}
      />
      <button
        type="submit"
        className="rounded-md border-2 border-zinc-800 p-2 focus:outline-none"
      >
        Submit
      </button>
    </form>
  );
};
